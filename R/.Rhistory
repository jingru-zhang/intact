genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
multipar = reall$reintact$multipar
Y_intact = reall$reintact$Y
Eta_intact = reall$reintact$Eta
Y_intact0 = reall$reintact0$Y
Eta_intact0 = reall$reintact0$Eta
Y_raw = reall$reraw$Y
Eta_raw = reall$reraw$Eta
Y_sim = reall$resim$Y
Eta_sim = reall$resim$Eta
Y_quan = reall$requan$Y
Eta_quan = reall$requan$Eta
Y_lcombat = reall$relcombat$Y
Eta_lcombat = reall$relcombat$Eta
d0 = c(ncol(Phixfun),ncol(Phiwfun))
Sim_raw = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar,d0)
Sim_sim = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_sim,multipar,d0)
Sim_quan = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_quan,multipar,d0)
Sim_lcombat = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_lcombat,multipar,d0)
Sim_intact = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar,d0)
Sim_intact0 = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact0,multipar,d0)
Sim_raw[[1]]
Sim_raw[[2]]
Sim_raw[[3]]
Sim_raw[[4]]
Sim_intact[[1]]
Sim_intact[[2]]
Sim_intact[[3]]
Sim_intact[[4]]
Sim_raw[[1]]
Sim_raw[[2]]
Sim_intact[[1]]
Sim_intact[[2]]
setwd("/Users/jingruzhang/Nutstore Files/Nutstore/research/intanalysis2024/nhanes/INTACT/R/")
source('intact.r')
nc = 0
subnum = c(200,200)
generdata = function(n,Phi,U,Lam,D,noise=0){
M = length(U)
p = nrow(Phi)
d = ncol(Phi)
data = data.true = eij = vector("list",M)
for(m in 1:M){
xi = matrix(rnorm(n[m]*d),d,n[m])
data[[m]] = t(Phi%*%U[[m]]%*%sqrt(Lam*D[[m]])%*%xi) # n*p
eij[[m]] = matrix(rnorm(n[m]*p),n[m],p)*noise
data[[m]] = data[[m]] + eij[[m]]
data.true[[m]] = t(Phi%*%sqrt(Lam)%*%xi)
}
return(list(data=data,data.true=data.true,eij=eij))
}
load("simuPhifun.RData") # it includes 'Phixfun', 'Phiwfun', 'alphafun', 'betafun', Ux, Uw, Dx, Dw
Lamx = diag(c(3.6,2.4,1))/2
Lamw = diag(c(2,1.4,1))/2
p = nrow(Phixfun)
M = 2
xx <- 1:p
beta1 = betafun/3
alpha1 = alphafun + 2
genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
multipar = reall$reintact$multipar
Y_intact = reall$reintact$Y
Eta_intact = reall$reintact$Eta
Y_intact0 = reall$reintact0$Y
Eta_intact0 = reall$reintact0$Eta
Y_raw = reall$reraw$Y
Eta_raw = reall$reraw$Eta
Y_sim = reall$resim$Y
Eta_sim = reall$resim$Eta
Y_quan = reall$requan$Y
Eta_quan = reall$requan$Eta
Y_lcombat = reall$relcombat$Y
Eta_lcombat = reall$relcombat$Eta
d0 = c(ncol(Phixfun),ncol(Phiwfun))
Sim_raw = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar,d0)
Sim_sim = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_sim,multipar,d0)
Sim_quan = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_quan,multipar,d0)
Sim_lcombat = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_lcombat,multipar,d0)
Sim_intact = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar,d0)
Sim_intact0 = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact0,multipar,d0)
Sim_raw[[1]]
Sim_raw[[2]]
Sim_raw[[3]]
Sim_raw[[1]]
Sim_raw[[2]]
Sim_intact[[1]]
Sim_intact[[2]]
source('intact.r')
Sim_raw = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar,d0)
Sim_intact = getSim(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar,d0)
Sim_raw
source('intact.r')
Sim_raw[[1]]
Sim_raw[[2]]
Sim_intact[[1]]
Sim_intact[[2]]
Sim_raw = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar,d0)
Sim_raw
Sim_intact = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar,d0)
Sim_intact
Lamx
Sim_raw
Sim_intact
source('intact.r')
Sim_raw = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Y_raw,d0)
Sim_raw[1:4]
Sim_intact = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Y_intact,d0)
Sim_intact[1:4]
source('intact.r')
Sim_raw = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar)
Sim_intact = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar)
Sim_raw[1:4]
Sim_intact[1:4]
setwd("/Users/jingruzhang/Nutstore Files/Nutstore/research/intanalysis2024/nhanes/INTACT/R/")
source('intact.r')
nc = 0
subnum = c(200,200)
generdata = function(n,Phi,U,Lam,D,noise=0){
M = length(U)
p = nrow(Phi)
d = ncol(Phi)
data = data.true = eij = vector("list",M)
for(m in 1:M){
xi = matrix(rnorm(n[m]*d),d,n[m])
data[[m]] = t(Phi%*%U[[m]]%*%sqrt(Lam*D[[m]])%*%xi) # n*p
eij[[m]] = matrix(rnorm(n[m]*p),n[m],p)*noise
data[[m]] = data[[m]] + eij[[m]]
data.true[[m]] = t(Phi%*%sqrt(Lam)%*%xi)
}
return(list(data=data,data.true=data.true,eij=eij))
}
load("simuPhifun.RData") # it includes 'Phixfun', 'Phiwfun', 'alphafun', 'betafun', Ux, Uw, Dx, Dw
Lamx = diag(c(3.6,2.4,1))/2
Lamw = diag(c(2,1.4,1))/2
p = nrow(Phixfun)
M = 2
xx <- 1:p
beta1 = betafun/3
alpha1 = alphafun + 2
genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
setwd("/Users/jingruzhang/Nutstore Files/Nutstore/research/intanalysis2024/nhanes/INTACT/R/")
source('intact.r')
nc = 0
subnum = c(200,200)
generdata = function(n,Phi,U,Lam,D,noise=0){
M = length(U)
p = nrow(Phi)
d = ncol(Phi)
data = data.true = eij = vector("list",M)
for(m in 1:M){
xi = matrix(rnorm(n[m]*d),d,n[m])
data[[m]] = t(Phi%*%U[[m]]%*%sqrt(Lam*D[[m]])%*%xi) # n*p
eij[[m]] = matrix(rnorm(n[m]*p),n[m],p)*noise
data[[m]] = data[[m]] + eij[[m]]
data.true[[m]] = t(Phi%*%sqrt(Lam)%*%xi)
}
return(list(data=data,data.true=data.true,eij=eij))
}
load("simuPhifun.RData") # it includes 'Phixfun', 'Phiwfun', 'alphafun', 'betafun', Ux, Uw, Dx, Dw
Lamx = diag(c(3.6,2.4,1))/2
Lamw = diag(c(2,1.4,1))/2
p = nrow(Phixfun)
M = 2
xx <- 1:p
beta1 = betafun/3
alpha1 = alphafun + 2
genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
multipar = reall$reintact$multipar
Y_intact = reall$reintact$Y
Eta_intact = reall$reintact$Eta
Y_intact0 = reall$reintact0$Y
Eta_intact0 = reall$reintact0$Eta
Y_raw = reall$reraw$Y
Eta_raw = reall$reraw$Eta
Y_sim = reall$resim$Y
Eta_sim = reall$resim$Eta
Y_quan = reall$requan$Y
Eta_quan = reall$requan$Eta
Y_lcombat = reall$relcombat$Y
Eta_lcombat = reall$relcombat$Eta
Sim_raw = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar)
Sim_sim = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_sim,multipar)
Sim_quan = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_quan,multipar)
Sim_lcombat = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_lcombat,multipar)
Sim_intact = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar)
Sim_intact0 = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact0,multipar)
Sim_raw[1:4]
Sim_intact[1:4]
setwd("/Users/jingruzhang/Nutstore Files/Nutstore/research/intanalysis2024/nhanes/INTACT/R/")
source('intact.r')
nc = 0
subnum = c(200,200)
generdata = function(n,Phi,U,Lam,D,noise=0){
M = length(U)
p = nrow(Phi)
d = ncol(Phi)
data = data.true = eij = vector("list",M)
for(m in 1:M){
xi = matrix(rnorm(n[m]*d),d,n[m])
data[[m]] = t(Phi%*%U[[m]]%*%sqrt(Lam*D[[m]])%*%xi) # n*p
eij[[m]] = matrix(rnorm(n[m]*p),n[m],p)*noise
data[[m]] = data[[m]] + eij[[m]]
data.true[[m]] = t(Phi%*%sqrt(Lam)%*%xi)
}
return(list(data=data,data.true=data.true,eij=eij))
}
load("simuPhifun.RData") # it includes 'Phixfun', 'Phiwfun', 'alphafun', 'betafun', Ux, Uw, Dx, Dw
Lamx = diag(c(3.6,2.4,1))/2
Lamw = diag(c(2,1.4,1))/2
p = nrow(Phixfun)
M = 2
xx <- 1:p
beta1 = betafun/3
alpha1 = alphafun + 2
genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
multipar = reall$reintact$multipar
Y_intact = reall$reintact$Y
Eta_intact = reall$reintact$Eta
Y_intact0 = reall$reintact0$Y
Eta_intact0 = reall$reintact0$Eta
Y_raw = reall$reraw$Y
Eta_raw = reall$reraw$Eta
Y_sim = reall$resim$Y
Eta_sim = reall$resim$Eta
Y_quan = reall$requan$Y
Eta_quan = reall$requan$Eta
Y_lcombat = reall$relcombat$Y
Eta_lcombat = reall$relcombat$Eta
Sim_raw = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_raw,multipar)
Sim_sim = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_sim,multipar)
Sim_quan = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_quan,multipar)
Sim_lcombat = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_lcombat,multipar)
Sim_intact = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact,multipar)
Sim_intact0 = getMVDV(Phixfun,Lamx,Phiwfun,Lamw,Eta_intact0,multipar)
Sim_raw[1:4]
Sim_intact[1:4]
Sim_intact0[1:4]
?spline.des
?smooth.construct
?crossprod
?matrix.multiply.mfpca
?crossprod
?solve.QP
?broman
??broman
setwd("/Users/jingruzhang/Nutstore Files/Nutstore/research/intanalysis2024/nhanes/INTACT/R/")
source('intact.r')
nc = 0
subnum = c(200,200)
generdata = function(n,Phi,U,Lam,D,noise=0){
M = length(U)
p = nrow(Phi)
d = ncol(Phi)
data = data.true = eij = vector("list",M)
for(m in 1:M){
xi = matrix(rnorm(n[m]*d),d,n[m])
data[[m]] = t(Phi%*%U[[m]]%*%sqrt(Lam*D[[m]])%*%xi) # n*p
eij[[m]] = matrix(rnorm(n[m]*p),n[m],p)*noise
data[[m]] = data[[m]] + eij[[m]]
data.true[[m]] = t(Phi%*%sqrt(Lam)%*%xi)
}
return(list(data=data,data.true=data.true,eij=eij))
}
load("simuPhifun.RData") # it includes 'Phixfun', 'Phiwfun', 'alphafun', 'betafun', Ux, Uw, Dx, Dw
Lamx = diag(c(3.6,2.4,1))/2
Lamw = diag(c(2,1.4,1))/2
p = nrow(Phixfun)
M = 2
xx <- 1:p
beta1 = betafun/3
alpha1 = alphafun + 2
genday = list(sample(3:7,subnum[1],replace=T),sample(3:7,subnum[2],replace=T))
obsnum = unlist(lapply(genday,sum))
genXdata = generdata(subnum,Phixfun,Ux,Lamx,Dx,noise=0)
genX = genXdata$data
genWdata = generdata(obsnum,Phiwfun,Uw,Lamw,Dw,noise=.2)
genW = genWdata$data
genY = zz.sub = vector("list",M)
zzall = c()
cumsub = c(0,cumsum(subnum))
for(m in 1:M){
genY[[m]] = matrix(0,obsnum[m],p)
cumday = c(0,cumsum(genday[[m]]))
for(sub in 1:subnum[m]){
subrow = (cumday[sub]+1):cumday[sub+1]
genY[[m]][subrow,] = matrix(genX[[m]][sub,],genday[[m]][sub],p,byrow = TRUE) +
genW[[m]][subrow,]
}
zz.sub[[m]] = rnorm(subnum[m],mean=1,sd=.5)
zz = rep(zz.sub[[m]],times=genday[[m]])
genY[[m]] = genY[[m]] + zz%*%t(beta1) + matrix(alpha1,obsnum[m],p,byrow=T)
rownames(genY[[m]]) = rep((cumsub[m]+1):cumsub[m+1],times=genday[[m]])
zzall = c(zzall,zz)
}
######
mydf0 = data.frame(subid=c(rownames(genY[[1]]),rownames(genY[[2]])),
zmat = zzall,
batch=c(rep(0,nrow(genY[[1]])),rep(1,nrow(genY[[2]]))))
Yraw = rbind(genY[[1]],genY[[2]])
rownames(Yraw) = mydf0$subid
formula = 'zmat'
needlog = 0
comparisons = 1
act = 1
wpve = 0.5
dd = NULL
if(nc==1){
Yraw.nc = Yraw
Yraw.nc[sample(length(Yraw.nc), 0.3*nrow(Yraw.nc)*ncol(Yraw.nc))] <- NA
Yraw = Yraw.nc
}
reall = INTACT(mydf0,Yraw,formula,needlog,comparisons,act,wpve,dd)
